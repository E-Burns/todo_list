{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","name","priority","isDone","_useState2","Object","slicedToArray","tasks","setTasks","_useState3","_useState4","newTask","setNewTask","_useState5","_useState6","newTaskPriority","setNewPriority","taskNodes","map","task","index","react_default","a","createElement","key","id","className","onClick","changeIsDone","handleTaskPriority","event","target","value","copyTasks","toConsumableArray","onSubmit","preventDefault","length","push","type","onChange","htmlFor","taskDone","filter","priorityHigh","priorityMed","priorityLow","orderedList","concat","filteredTasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.62058892.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([\n    //tasks go in here\n    { name: \"Eat Jaffa cakes\", priority: \"high\", isDone: false },\n    { name: \"Watch Empire Strikes Back\", priority: \"medium\", isDone: false },\n    { name: \"Watch Last Jedi\", priority: \"low\", isDone: false }\n  ]);\n\n  const [newTask, setNewTask] = useState('');\n  const [newTaskPriority, setNewPriority] = useState('');\n\n\n  //making the list\n\n  const taskNodes = tasks.map((task, index) => {\n    return(\n      <li key={index} id='taskItem' className={\n        task.isDone === true ? 'done' :\n        task.priority === 'high' ? 'high' : task.priority === 'medium' ? 'medium' : 'low'}>\n        <span>{task.name}</span>\n\n        {task.isDone ? <span className='done'>Task completed!</span> : <button onClick={() => changeIsDone(index)}>Done?</button>}\n      </li>\n    );\n  });\n\n  const handleTaskInput = (event) => {\n    setNewTask(event.target.value);\n  }\n\n  const handleTaskPriority = (event) => {\n    setNewPriority(event.target.value);\n  }\n\n  const saveNewTask = (event) => {\n    event.preventDefault();\n    if(newTask.length > 0 && (newTaskPriority === 'high' || newTaskPriority === 'medium' || newTaskPriority === 'low')){\n      const copyTasks = [...tasks];\n      copyTasks.push({name: newTask, priority: newTaskPriority, isDone: false});\n      setTasks(copyTasks);\n      setNewTask('');\n    }\n  }\n\n  const changeIsDone = (index) => {\n    const copyTasks = [...tasks];\n    copyTasks[index].isDone = true;\n    copyTasks[index].priority = 'none';\n    setTasks(copyTasks);\n  }\n\n\n  //editing the list\n  const handleOrder = (event) => {\n    event.preventDefault();\n    const taskDone = tasks.filter(task => task.isDone === true);\n    const priorityHigh = tasks.filter(task => task.priority === 'high');\n    const priorityMed = tasks.filter(task => task.priority === 'medium');\n    const priorityLow = tasks.filter(task => task.priority === 'low');\n    const orderedList = taskDone.concat(priorityHigh, priorityMed, priorityLow);\n    setTasks(orderedList);\n  }\n\n  const handleRemoveAll = (event) => {\n    event.preventDefault();\n    const emptyArray = [];\n    setTasks(emptyArray);\n  }\n\n  const handleRemoveDone = (event) => {\n    event.preventDefault();\n    const filteredTasks = tasks.filter(task => task.isDone === false);\n    setTasks(filteredTasks);\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <h1>To-Do List</h1>\n      <hr></hr>\n\n{/* making list */}\n      <form onSubmit={saveNewTask}>\n        <input id='new-task' type='text' value={newTask} onChange={handleTaskInput} />\n        \n        <input type='radio' id='priorityHigh' name=\"priority\" value='high' onChange={handleTaskPriority} />\n          <label htmlFor='priorityHigh'>High</label>\n\n        <input type='radio' id='priorityMed' name=\"priority\" value='medium' onChange={handleTaskPriority} />\n          <label htmlFor='priorityMed'>Medium</label>\n\n        <input type='radio' id='priorityLow' name=\"priority\" value='low' onChange={handleTaskPriority} />\n          <label htmlFor='priorityLow'>Low</label>\n\n        <input id='save-task' type='submit' value='Save Task'/>\n      </form>\n\n{/* editing list */}\n      <form id='removeForm'>\n        <button onClick={handleOrder} className='reorder'>Order tasks</button>\n        <button onClick={handleRemoveDone} className='remove'>Remove done</button>\n        <button onClick={handleRemoveAll} className='remove'>Remove all</button>\n      </form>\n\n{/* list */}\n      <ul>\n        {taskNodes}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}